verbose: &verbose 1
runs: 1
procs_no: 8
save_folder: "experiments"
name: "BDDVImageDataset"
title: "Conditonal Imitation Learning"
plots: "tensorboard" # can be "matplotlib", "tensorboard" or "both"

general:
  batch_size: &batch_size 256
  use_cuda: &use_cuda yes
  seed: 3

data_info: &data_info
  image_shape: [3, 90, 320]
  frame_seq_len: 1

# Estimator
model: &model
  name: "BDDVModel"
  type: ""
  hidden_size: 256
  nr_bins: 181  #use classification or regression for steering

train: &train
  no_epochs: 70
  eval_freq: 1
  paper_init: True
  freeze_bn_gamma: False
  max_grad_norm: 40.
  batch_norm_eps: 0.001
  dropout_conv: 0.2
  dropout_liniar: 0.5
  criterion: ""
  algorithm: SGD
  algorithm_args:
    lr: 0.001
    momentum: 0.9
  # algorithm: Adam
  # algorithm_args:
  #   lr: 0.0002
  #   betas: [0.7, 0.85]
  scheduler: ReduceLROnPlateau
  scheduler_args:
    factor: 0.1
    patience: 7000
    threshold: 0.001
    threshold_mode: 'rel'
  # scheduler: StepLR
  # scheduler_args:
  #   step_size: 50000
  #   gamma: 0.5


sampler: &sampler
  sampler_name: "BDDVImageSampler"
  weights: [0.166, 0.166, 0.168, 0.166, 0.168, 0.166]

dataset: &dataset
  name: "BDDVImageDataset"
  sampler: *sampler
  data_info: *data_info
  dataset_path: "/home/nemodrive3/workspace/andreim/upb_data/dataset/train_frames"
  info_path: "/home/nemodrive3/workspace/andreim/upb_data/dataset/train/info"
  dataset_eval_path: "/home/nemodrive3/workspace/andreim/upb_data/dataset/train_frames"
  info_eval_path: "/home/nemodrive3/workspace/andreim/upb_data/dataset/train/info"
  dataset_test_path: "/home/nemodrive3/workspace/andreim/upb_data/dataset/train_frames"
  info_test_path: "/home/nemodrive3/workspace/andreim/upb_data/dataset/train/info"
  video_metadata_path: "/home/andrei/storage/nemodrive/SteeringNetwork/data_loading/bdd_dataset_helper/video_data/train.metadata.pkl"
  sampling_factor: 3
  dispersion: 0.15

agent: &agent
  name: "BDDVImageAgent"
  type: "No Noise Speed 90 0.1 Brake, Extra Left Prob"
  resume: ""
  model: *model
  train: *train
  dataset: *dataset
  data_info: *data_info
  verbose: *verbose
  use_cuda: *use_cuda
  batch_size: *batch_size
  data_parallel: [0, -1] # [use/not_use, device_ids: -1 -- all / [list of device ids] ]
  save_freq: 2
  save_best: yes
  save_best_freq_lim: 5
  use_progress_bar: yes

data_loader:
  name: "BDDVImageLoader"
  dataset: *dataset
  data_info: *data_info
  test_size: 0
  shuffle: no
  no_workers: 8
  data_seed: 314
  batch_size: *batch_size
